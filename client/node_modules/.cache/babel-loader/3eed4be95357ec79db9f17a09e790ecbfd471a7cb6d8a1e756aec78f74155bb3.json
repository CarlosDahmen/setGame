{"ast":null,"code":"//add selected:false property to all cards\n\nexport const cards = [{\n  id: 1,\n  color: \"red\",\n  shape: \"peanut\",\n  fill: \"solid\",\n  quantity: 1,\n  selected: false\n}, {\n  id: 2,\n  color: \"red\",\n  shape: \"peanut\",\n  fill: \"solid\",\n  quantity: 2,\n  selected: false\n}, {\n  id: 3,\n  color: \"red\",\n  shape: \"peanut\",\n  fill: \"solid\",\n  quantity: 3,\n  selected: false\n}, {\n  id: 4,\n  color: \"purple\",\n  shape: \"peanut\",\n  fill: \"solid\",\n  quantity: 1,\n  selected: false\n}, {\n  id: 5,\n  color: \"purple\",\n  shape: \"peanut\",\n  fill: \"solid\",\n  quantity: 2,\n  selected: false\n}, {\n  id: 6,\n  color: \"purple\",\n  shape: \"peanut\",\n  fill: \"solid\",\n  quantity: 3,\n  selected: false\n}, {\n  id: 7,\n  color: \"green\",\n  shape: \"peanut\",\n  fill: \"solid\",\n  quantity: 1,\n  selected: false\n}, {\n  id: 8,\n  color: \"green\",\n  shape: \"peanut\",\n  fill: \"solid\",\n  quantity: 2,\n  selected: false\n}, {\n  id: 9,\n  color: \"green\",\n  shape: \"peanut\",\n  fill: \"solid\",\n  quantity: 3,\n  selected: false\n}, {\n  id: 10,\n  color: \"red\",\n  shape: \"diamond\",\n  fill: \"solid\",\n  quantity: 1,\n  selected: false\n}, {\n  id: 11,\n  color: \"red\",\n  shape: \"diamond\",\n  fill: \"solid\",\n  quantity: 2,\n  selected: false\n}, {\n  id: 12,\n  color: \"red\",\n  shape: \"diamond\",\n  fill: \"solid\",\n  quantity: 3,\n  selected: false\n}];\n\n// method to check if a card is selected\nconst isSelected = card => {\n  return card.selected;\n};","map":{"version":3,"names":["cards","id","color","shape","fill","quantity","selected","isSelected","card"],"sources":["/Users/cd/Documents/Projects/set-game2/src/cards.ts"],"sourcesContent":["import { Card } from \"./types/Card\";\n\n//add selected:false property to all cards\n\nexport const cards: Card[] = [\n  {\n    id: 1,\n    color: \"red\",\n    shape: \"peanut\",\n    fill: \"solid\",\n    quantity: 1,\n    selected: false,\n  },\n  {\n    id: 2,\n    color: \"red\",\n    shape: \"peanut\",\n    fill: \"solid\",\n    quantity: 2,\n    selected: false,\n  },\n  {\n    id: 3,\n    color: \"red\",\n    shape: \"peanut\",\n    fill: \"solid\",\n    quantity: 3,\n    selected: false,\n  },\n  {\n    id: 4,\n    color: \"purple\",\n    shape: \"peanut\",\n    fill: \"solid\",\n    quantity: 1,\n    selected: false,\n  },\n  {\n    id: 5,\n    color: \"purple\",\n    shape: \"peanut\",\n    fill: \"solid\",\n    quantity: 2,\n    selected: false,\n  },\n  {\n    id: 6,\n    color: \"purple\",\n    shape: \"peanut\",\n    fill: \"solid\",\n    quantity: 3,\n    selected: false,\n  },\n  {\n    id: 7,\n    color: \"green\",\n    shape: \"peanut\",\n    fill: \"solid\",\n    quantity: 1,\n    selected: false,\n  },\n  {\n    id: 8,\n    color: \"green\",\n    shape: \"peanut\",\n    fill: \"solid\",\n    quantity: 2,\n    selected: false,\n  },\n  {\n    id: 9,\n    color: \"green\",\n    shape: \"peanut\",\n    fill: \"solid\",\n    quantity: 3,\n    selected: false,\n  },\n  {\n    id: 10,\n    color: \"red\",\n    shape: \"diamond\",\n    fill: \"solid\",\n    quantity: 1,\n    selected: false,\n  },\n  {\n    id: 11,\n    color: \"red\",\n    shape: \"diamond\",\n    fill: \"solid\",\n    quantity: 2,\n    selected: false,\n  },\n  {\n    id: 12,\n    color: \"red\",\n    shape: \"diamond\",\n    fill: \"solid\",\n    quantity: 3,\n    selected: false,\n  },\n];\n\n// method to check if a card is selected\nconst isSelected = (card: Card) => {\n  return card.selected;\n};\n"],"mappings":"AAEA;;AAEA,OAAO,MAAMA,KAAa,GAAG,CAC3B;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE,SAAS;EAChBC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE,SAAS;EAChBC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE,SAAS;EAChBC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC,CACF;;AAED;AACA,MAAMC,UAAU,GAAIC,IAAU,IAAK;EACjC,OAAOA,IAAI,CAACF,QAAQ;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}