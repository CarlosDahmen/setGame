{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Documents/Projects/set-game2/src/context/GameLogic.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { initDeck } from \"../utils/Deck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialContext = {\n  deck: initDeck(),\n  setDeck: () => {}\n};\nconst GameContext = /*#__PURE__*/createContext(initialContext);\n\n// Hook that returns the Context value\nexport const useGameDetails = () => {\n  _s();\n  const contextValue = useContext(GameContext);\n  if (!contextValue) {\n    throw new Error(\"useGameDetails must be called within GameContextProvider\");\n  }\n  return contextValue;\n};\n\n// Context provider that returns the context that wraps the children to give them access to the state\n_s(useGameDetails, \"LIxFXvZbUdXE/TWxKLLXMjM3Mig=\");\nexport const GameContextProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [deck, setDeck] = useState([]);\n  const value = {\n    deck,\n    setDeck\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n_s2(GameContextProvider, \"h85ghwWFuAZ0QkT43K1tI9U/CM0=\");\n_c = GameContextProvider;\nvar _c;\n$RefreshReg$(_c, \"GameContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","initDeck","jsxDEV","_jsxDEV","initialContext","deck","setDeck","GameContext","useGameDetails","_s","contextValue","Error","GameContextProvider","_ref","_s2","children","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cd/Documents/Projects/set-game2/src/context/GameLogic.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  createContext,\n  useContext,\n  useState,\n} from \"react\";\nimport { initDeck } from \"../utils/Deck\";\n\ninterface IGameContext {\n  deck: number[];\n  setDeck: (deck: number[], selectedCards: number[]) => void;\n}\n\nconst initialContext = {\n  deck: initDeck(),\n  setDeck: () => {},\n};\n\nconst GameContext = createContext<IGameContext>(initialContext);\n\n// Hook that returns the Context value\nexport const useGameDetails = () => {\n  const contextValue = useContext(GameContext);\n\n  if (!contextValue) {\n    throw new Error(\"useGameDetails must be called within GameContextProvider\");\n  }\n  return contextValue;\n};\n\n// Context provider that returns the context that wraps the children to give them access to the state\nexport const GameContextProvider = ({ children }: ReactElement[]) => {\n  const [deck, setDeck] = useState<number[]>([]);\n\n  const value = {\n    deck,\n    setDeck,\n  };\n\n  return <GameContext.Provider value={value}>{children}</GameContext.Provider>;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAEVC,aAAa,EACbC,UAAU,EACVC,QAAQ,QACH,OAAO;AACd,SAASC,QAAQ,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOzC,MAAMC,cAAc,GAAG;EACrBC,IAAI,EAAEJ,QAAQ,CAAC,CAAC;EAChBK,OAAO,EAAEA,CAAA,KAAM,CAAC;AAClB,CAAC;AAED,MAAMC,WAAW,gBAAGT,aAAa,CAAeM,cAAc,CAAC;;AAE/D;AACA,OAAO,MAAMI,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,YAAY,GAAGX,UAAU,CAACQ,WAAW,CAAC;EAE5C,IAAI,CAACG,YAAY,EAAE;IACjB,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;EAC7E;EACA,OAAOD,YAAY;AACrB,CAAC;;AAED;AAAAD,EAAA,CATaD,cAAc;AAU3B,OAAO,MAAMI,mBAAmB,GAAGC,IAAA,IAAkC;EAAAC,GAAA;EAAA,IAAjC;IAAEC;EAAyB,CAAC,GAAAF,IAAA;EAC9D,MAAM,CAACR,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAW,EAAE,CAAC;EAE9C,MAAMgB,KAAK,GAAG;IACZX,IAAI;IACJC;EACF,CAAC;EAED,oBAAOH,OAAA,CAACI,WAAW,CAACU,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAD,QAAA,EAAEA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACP,GAAA,CATWF,mBAAmB;AAAAU,EAAA,GAAnBV,mBAAmB;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}