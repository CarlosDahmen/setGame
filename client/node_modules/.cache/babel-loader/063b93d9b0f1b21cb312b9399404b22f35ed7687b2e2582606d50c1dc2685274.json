{"ast":null,"code":"import{createPortal}from\"react-dom\";import\"./Rules.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Rules=function Rules(_ref){var closeRulesModal=_ref.closeRulesModal;return/*#__PURE__*/createPortal(/*#__PURE__*/_jsxs(\"div\",{className:\"rules\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Rules and How to Play\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"The purpose of the Game is to identify SETs of 3 cards from the 12 unique cards shown on the board.\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"What is a Set?\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"A set consists of three cards in which each feature (shape, color, number and fill) are all the same, or all different.\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Examples of Sets:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"images-container\",children:[/*#__PURE__*/_jsxs(\"figure\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(process.env.PUBLIC_URL,\"/images/examples/example1.png\"),alt:\"example1\"}),/*#__PURE__*/_jsx(\"figcaption\",{children:\"All different fill, color, and number, all same shape\"})]}),/*#__PURE__*/_jsxs(\"figure\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(process.env.PUBLIC_URL,\"/images/examples/example2.png\"),alt:\"example2\"}),/*#__PURE__*/_jsx(\"figcaption\",{children:\"All different fill and color, all same number and shape\"})]}),/*#__PURE__*/_jsxs(\"figure\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(process.env.PUBLIC_URL,\"/images/examples/example3.png\"),alt:\"example3\"}),/*#__PURE__*/_jsx(\"figcaption\",{children:\"All different fill, all same color, number and shape\"})]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"How to Play:\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Once you think you\\u2019ve found a set, click on the cards. If it is a set, the selected cards will turn green, a +1 will be added to your score, and the three cards will be replaced by new cards. If it is not a set, the cards will turn red and your score will decrease by 1.\"}),/*#__PURE__*/_jsx(\"button\",{id:\"close-button\",onClick:function onClick(){return closeRulesModal();},children:\"CLOSE\"})]}),document.body);};export default Rules;","map":{"version":3,"names":["createPortal","jsx","_jsx","jsxs","_jsxs","Rules","_ref","closeRulesModal","className","children","src","concat","process","env","PUBLIC_URL","alt","id","onClick","document","body"],"sources":["/Users/cd/Documents/Projects/set-game2/src/components/Rules.tsx"],"sourcesContent":["import { createPortal } from \"react-dom\";\nimport \"./Rules.css\";\n\nconst Rules = ({ closeRulesModal }: any) => {\n  return createPortal(\n    <div className=\"rules\">\n      <h1>Rules and How to Play</h1>\n      <h3>\n        The purpose of the Game is to identify SETs of 3 cards from the 12\n        unique cards shown on the board.\n      </h3>\n\n      <h2>What is a Set?</h2>\n      <h3>\n        A set consists of three cards in which each feature (shape, color,\n        number and fill) are all the same, or all different.\n      </h3>\n\n      <h2>Examples of Sets:</h2>\n      <div className=\"images-container\">\n        <figure>\n          <img\n            src={`${process.env.PUBLIC_URL}/images/examples/example1.png`}\n            alt=\"example1\"\n          ></img>\n          <figcaption>\n            All different fill, color, and number, all same shape\n          </figcaption>\n        </figure>\n        <figure>\n          <img\n            src={`${process.env.PUBLIC_URL}/images/examples/example2.png`}\n            alt=\"example2\"\n          ></img>\n          <figcaption>\n            All different fill and color, all same number and shape\n          </figcaption>\n        </figure>\n        <figure>\n          <img\n            src={`${process.env.PUBLIC_URL}/images/examples/example3.png`}\n            alt=\"example3\"\n          ></img>\n          <figcaption>\n            All different fill, all same color, number and shape\n          </figcaption>\n        </figure>\n      </div>\n      <h2>How to Play:</h2>\n      <h3>\n        Once you think youâ€™ve found a set, click on the cards. If it is a set,\n        the selected cards will turn green, a +1 will be added to your score,\n        and the three cards will be replaced by new cards. If it is not a set,\n        the cards will turn red and your score will decrease by 1.\n      </h3>\n      <button id=\"close-button\" onClick={() => closeRulesModal()}>\n        CLOSE\n      </button>\n    </div>,\n    document.body\n  );\n};\n\nexport default Rules;\n"],"mappings":"AAAA,OAASA,YAAY,KAAQ,WAAW,CACxC,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAErB,GAAM,CAAAC,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAAC,IAAA,CAAiC,IAA3B,CAAAC,eAAe,CAAAD,IAAA,CAAfC,eAAe,CAC9B,mBAAOP,YAAY,cACjBI,KAAA,QAAKI,SAAS,CAAC,OAAO,CAAAC,QAAA,eACpBP,IAAA,OAAAO,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9BP,IAAA,OAAAO,QAAA,CAAI,qGAGJ,CAAI,CAAC,cAELP,IAAA,OAAAO,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBP,IAAA,OAAAO,QAAA,CAAI,yHAGJ,CAAI,CAAC,cAELP,IAAA,OAAAO,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BL,KAAA,QAAKI,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BL,KAAA,WAAAK,QAAA,eACEP,IAAA,QACEQ,GAAG,IAAAC,MAAA,CAAKC,OAAO,CAACC,GAAG,CAACC,UAAU,iCAAgC,CAC9DC,GAAG,CAAC,UAAU,CACV,CAAC,cACPb,IAAA,eAAAO,QAAA,CAAY,uDAEZ,CAAY,CAAC,EACP,CAAC,cACTL,KAAA,WAAAK,QAAA,eACEP,IAAA,QACEQ,GAAG,IAAAC,MAAA,CAAKC,OAAO,CAACC,GAAG,CAACC,UAAU,iCAAgC,CAC9DC,GAAG,CAAC,UAAU,CACV,CAAC,cACPb,IAAA,eAAAO,QAAA,CAAY,yDAEZ,CAAY,CAAC,EACP,CAAC,cACTL,KAAA,WAAAK,QAAA,eACEP,IAAA,QACEQ,GAAG,IAAAC,MAAA,CAAKC,OAAO,CAACC,GAAG,CAACC,UAAU,iCAAgC,CAC9DC,GAAG,CAAC,UAAU,CACV,CAAC,cACPb,IAAA,eAAAO,QAAA,CAAY,sDAEZ,CAAY,CAAC,EACP,CAAC,EACN,CAAC,cACNP,IAAA,OAAAO,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBP,IAAA,OAAAO,QAAA,CAAI,qRAKJ,CAAI,CAAC,cACLP,IAAA,WAAQc,EAAE,CAAC,cAAc,CAACC,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAV,eAAe,CAAC,CAAC,EAAC,CAAAE,QAAA,CAAC,OAE5D,CAAQ,CAAC,EACN,CAAC,CACNS,QAAQ,CAACC,IACX,CAAC,CACH,CAAC,CAED,cAAe,CAAAd,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}