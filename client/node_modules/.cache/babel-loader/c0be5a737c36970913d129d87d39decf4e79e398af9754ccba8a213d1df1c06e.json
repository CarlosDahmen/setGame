{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Documents/Projects/set-game2/src/components/Gameboard.tsx\",\n  _s = $RefreshSig$();\nimport { useGameDetails } from \"../context/GameLogic\";\nimport styles from \"./Gameboard.module.css\";\nimport findIndex from \"lodash.findindex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Gameboard() {\n  _s();\n  const {\n    deck,\n    setDeck\n  } = useGameDetails();\n  const selectCard = card => {\n    const selectedCards = deck.filter(card => card.selected === true);\n    const selectedCardId = card.id;\n    const selectedCardIdx = findIndex(deck, {\n      id: selectedCardId\n    });\n    const selectedCardsIncludesCard = selectedCards.some(card => card.id === selectedCardId);\n    let newDeck = [...deck];\n    if (selectedCards.length < 3 && !selectedCardsIncludesCard) {\n      card.selected = true;\n      newDeck.splice(selectedCardIdx, 1, card);\n      setDeck(newDeck);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.gameboard,\n    children: deck.length && deck.map((card, idx) => {\n      const imageUrl = require(`../../public/images/cards/${card.id}.gif`);\n      const cardStyles = card => {\n        if (card.selected) {\n          return styles.selectedCard;\n        }\n        if (card.selected && card.set) {\n          return styles.isPartSet;\n        }\n        if (card.selected && !card.set) {\n          return styles.isNotPartSet;\n        }\n        return \"\";\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.overlay}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: `${styles.card} ${cardStyles(card)}`,\n          src: imageUrl,\n          alt: \"card\",\n          onClick: () => selectCard(card)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Gameboard, \"Mh4Zg6i9LgAhHJF8NIIsRkFaA7M=\", false, function () {\n  return [useGameDetails];\n});\n_c = Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["useGameDetails","styles","findIndex","jsxDEV","_jsxDEV","Gameboard","_s","deck","setDeck","selectCard","card","selectedCards","filter","selected","selectedCardId","id","selectedCardIdx","selectedCardsIncludesCard","some","newDeck","length","splice","className","gameboard","children","map","idx","imageUrl","require","cardStyles","selectedCard","set","isPartSet","isNotPartSet","overlay","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/cd/Documents/Projects/set-game2/src/components/Gameboard.tsx"],"sourcesContent":["import { useGameDetails } from \"../context/GameLogic\";\nimport { Card } from \"../types/Card\";\nimport styles from \"./Gameboard.module.css\";\nimport findIndex from \"lodash.findindex\";\n\nexport default function Gameboard() {\n  const { deck, setDeck } = useGameDetails();\n\n  const selectCard = (card: Card) => {\n    const selectedCards = deck.filter((card) => card.selected === true);\n\n    const selectedCardId = card.id;\n    const selectedCardIdx = findIndex(deck, { id: selectedCardId });\n\n    const selectedCardsIncludesCard = selectedCards.some(\n      (card) => card.id === selectedCardId\n    );\n\n    let newDeck = [...deck];\n\n    if (selectedCards.length < 3 && !selectedCardsIncludesCard) {\n      card.selected = true;\n      newDeck.splice(selectedCardIdx, 1, card);\n      setDeck(newDeck);\n    }\n  };\n\n  return (\n    <div className={styles.gameboard}>\n      {deck.length &&\n        deck.map((card, idx) => {\n          const imageUrl = require(`../../public/images/cards/${card.id}.gif`);\n\n          const cardStyles = (card: Card) => {\n            if (card.selected) {\n              return styles.selectedCard;\n            }\n\n            if (card.selected && card.set) {\n              return styles.isPartSet;\n            }\n\n            if (card.selected && !card.set) {\n              return styles.isNotPartSet;\n            }\n            return \"\";\n          };\n          return (\n            <div>\n              <div className={`${styles.overlay}`} />\n              <img\n                className={`${styles.card} ${cardStyles(card)}`}\n                src={imageUrl}\n                alt=\"card\"\n                key={idx}\n                onClick={() => selectCard(card)}\n              />\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,sBAAsB;AAErD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGR,cAAc,CAAC,CAAC;EAE1C,MAAMS,UAAU,GAAIC,IAAU,IAAK;IACjC,MAAMC,aAAa,GAAGJ,IAAI,CAACK,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACG,QAAQ,KAAK,IAAI,CAAC;IAEnE,MAAMC,cAAc,GAAGJ,IAAI,CAACK,EAAE;IAC9B,MAAMC,eAAe,GAAGd,SAAS,CAACK,IAAI,EAAE;MAAEQ,EAAE,EAAED;IAAe,CAAC,CAAC;IAE/D,MAAMG,yBAAyB,GAAGN,aAAa,CAACO,IAAI,CACjDR,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKD,cACxB,CAAC;IAED,IAAIK,OAAO,GAAG,CAAC,GAAGZ,IAAI,CAAC;IAEvB,IAAII,aAAa,CAACS,MAAM,GAAG,CAAC,IAAI,CAACH,yBAAyB,EAAE;MAC1DP,IAAI,CAACG,QAAQ,GAAG,IAAI;MACpBM,OAAO,CAACE,MAAM,CAACL,eAAe,EAAE,CAAC,EAAEN,IAAI,CAAC;MACxCF,OAAO,CAACW,OAAO,CAAC;IAClB;EACF,CAAC;EAED,oBACEf,OAAA;IAAKkB,SAAS,EAAErB,MAAM,CAACsB,SAAU;IAAAC,QAAA,EAC9BjB,IAAI,CAACa,MAAM,IACVb,IAAI,CAACkB,GAAG,CAAC,CAACf,IAAI,EAAEgB,GAAG,KAAK;MACtB,MAAMC,QAAQ,GAAGC,OAAO,CAAE,6BAA4BlB,IAAI,CAACK,EAAG,MAAK,CAAC;MAEpE,MAAMc,UAAU,GAAInB,IAAU,IAAK;QACjC,IAAIA,IAAI,CAACG,QAAQ,EAAE;UACjB,OAAOZ,MAAM,CAAC6B,YAAY;QAC5B;QAEA,IAAIpB,IAAI,CAACG,QAAQ,IAAIH,IAAI,CAACqB,GAAG,EAAE;UAC7B,OAAO9B,MAAM,CAAC+B,SAAS;QACzB;QAEA,IAAItB,IAAI,CAACG,QAAQ,IAAI,CAACH,IAAI,CAACqB,GAAG,EAAE;UAC9B,OAAO9B,MAAM,CAACgC,YAAY;QAC5B;QACA,OAAO,EAAE;MACX,CAAC;MACD,oBACE7B,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAKkB,SAAS,EAAG,GAAErB,MAAM,CAACiC,OAAQ;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvClC,OAAA;UACEkB,SAAS,EAAG,GAAErB,MAAM,CAACS,IAAK,IAAGmB,UAAU,CAACnB,IAAI,CAAE,EAAE;UAChD6B,GAAG,EAAEZ,QAAS;UACda,GAAG,EAAC,MAAM;UAEVC,OAAO,EAAEA,CAAA,KAAMhC,UAAU,CAACC,IAAI;QAAE,GAD3BgB,GAAG;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAChC,EAAA,CAzDuBD,SAAS;EAAA,QACLL,cAAc;AAAA;AAAA0C,EAAA,GADlBrC,SAAS;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}