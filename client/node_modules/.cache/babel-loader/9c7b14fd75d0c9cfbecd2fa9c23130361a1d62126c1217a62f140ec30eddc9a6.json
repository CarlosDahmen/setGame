{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Documents/Projects/set-game2/src/components/Gameboard.tsx\",\n  _s = $RefreshSig$();\nimport { useGameDetails } from \"../context/GameLogic\";\nimport styles from \"./Gameboard.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Gameboard() {\n  _s();\n  const {\n    deck,\n    setDeck\n  } = useGameDetails();\n  const selectCard = card => {\n    console.log(deck);\n    const selectedCards = deck.filter(card => card.selected === true);\n    console.log(\"selected cards\", selectedCards);\n    const selectedCardId = card.id;\n    const selectedCardsIncludesCard = selectedCards.some(card => card.id === selectedCardId);\n    console.log(\"check\", selectedCardsIncludesCard);\n\n    // if (selectedCards.length < 3 && !selectedCardsIncludesCard) {\n    //   card.selected = true;\n    //   const newDeck = [...deck, card];\n    //   setDeck(newDeck);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.gameboard,\n    children: deck.length && deck.map((card, idx) => {\n      const imageUrl = require(`../../public/images/cards/${card.id}.gif`);\n      // const selectedCards = deck.filter((card) => card.selected === true);\n      // const isCardSelected = selectedCards.some(\n      //   (currcard) => currcard.id === card.id\n      // );\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `${styles.card} ${card.selected ? styles.selectedCard : \"\"} ${card.set} ? ${styles.isPartSet}: ${styles.isNotPartSet}`,\n        src: imageUrl,\n        width: 258,\n        height: 167,\n        alt: \"card\",\n        onClick: () => selectCard(card)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Gameboard, \"Mh4Zg6i9LgAhHJF8NIIsRkFaA7M=\", false, function () {\n  return [useGameDetails];\n});\n_c = Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["useGameDetails","styles","jsxDEV","_jsxDEV","Gameboard","_s","deck","setDeck","selectCard","card","console","log","selectedCards","filter","selected","selectedCardId","id","selectedCardsIncludesCard","some","className","gameboard","children","length","map","idx","imageUrl","require","selectedCard","set","isPartSet","isNotPartSet","src","width","height","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cd/Documents/Projects/set-game2/src/components/Gameboard.tsx"],"sourcesContent":["import { useGameDetails } from \"../context/GameLogic\";\nimport { Card } from \"../types/Card\";\nimport styles from \"./Gameboard.module.css\";\n\nexport default function Gameboard() {\n  const { deck, setDeck } = useGameDetails();\n\n  const selectCard = (card: Card) => {\n    console.log(deck);\n    const selectedCards = deck.filter((card) => card.selected === true);\n    console.log(\"selected cards\", selectedCards);\n\n    const selectedCardId = card.id;\n    const selectedCardsIncludesCard = selectedCards.some(\n      (card) => card.id === selectedCardId\n    );\n\n    console.log(\"check\", selectedCardsIncludesCard);\n\n    // if (selectedCards.length < 3 && !selectedCardsIncludesCard) {\n    //   card.selected = true;\n    //   const newDeck = [...deck, card];\n    //   setDeck(newDeck);\n    // }\n  };\n\n  return (\n    <div className={styles.gameboard}>\n      {deck.length &&\n        deck.map((card, idx) => {\n          const imageUrl = require(`../../public/images/cards/${card.id}.gif`);\n          // const selectedCards = deck.filter((card) => card.selected === true);\n          // const isCardSelected = selectedCards.some(\n          //   (currcard) => currcard.id === card.id\n          // );\n          return (\n            <img\n              className={`${styles.card} ${\n                card.selected ? styles.selectedCard : \"\"\n              } ${card.set} ? ${styles.isPartSet}: ${styles.isNotPartSet}`}\n              src={imageUrl}\n              width={258}\n              height={167}\n              alt=\"card\"\n              key={idx}\n              onClick={() => selectCard(card)}\n            />\n          );\n        })}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,sBAAsB;AAErD,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGP,cAAc,CAAC,CAAC;EAE1C,MAAMQ,UAAU,GAAIC,IAAU,IAAK;IACjCC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACjB,MAAMM,aAAa,GAAGN,IAAI,CAACO,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACK,QAAQ,KAAK,IAAI,CAAC;IACnEJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,aAAa,CAAC;IAE5C,MAAMG,cAAc,GAAGN,IAAI,CAACO,EAAE;IAC9B,MAAMC,yBAAyB,GAAGL,aAAa,CAACM,IAAI,CACjDT,IAAI,IAAKA,IAAI,CAACO,EAAE,KAAKD,cACxB,CAAC;IAEDL,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEM,yBAAyB,CAAC;;IAE/C;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,oBACEd,OAAA;IAAKgB,SAAS,EAAElB,MAAM,CAACmB,SAAU;IAAAC,QAAA,EAC9Bf,IAAI,CAACgB,MAAM,IACVhB,IAAI,CAACiB,GAAG,CAAC,CAACd,IAAI,EAAEe,GAAG,KAAK;MACtB,MAAMC,QAAQ,GAAGC,OAAO,CAAE,6BAA4BjB,IAAI,CAACO,EAAG,MAAK,CAAC;MACpE;MACA;MACA;MACA;MACA,oBACEb,OAAA;QACEgB,SAAS,EAAG,GAAElB,MAAM,CAACQ,IAAK,IACxBA,IAAI,CAACK,QAAQ,GAAGb,MAAM,CAAC0B,YAAY,GAAG,EACvC,IAAGlB,IAAI,CAACmB,GAAI,MAAK3B,MAAM,CAAC4B,SAAU,KAAI5B,MAAM,CAAC6B,YAAa,EAAE;QAC7DC,GAAG,EAAEN,QAAS;QACdO,KAAK,EAAE,GAAI;QACXC,MAAM,EAAE,GAAI;QACZC,GAAG,EAAC,MAAM;QAEVC,OAAO,EAAEA,CAAA,KAAM3B,UAAU,CAACC,IAAI;MAAE,GAD3Be,GAAG;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CAAC;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAClC,EAAA,CA/CuBD,SAAS;EAAA,QACLJ,cAAc;AAAA;AAAAwC,EAAA,GADlBpC,SAAS;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}