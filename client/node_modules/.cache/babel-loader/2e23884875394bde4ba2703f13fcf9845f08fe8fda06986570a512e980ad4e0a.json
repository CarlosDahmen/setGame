{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useHighscores = () => {\n  _s();\n  const [highscores, setHighscores] = useState([]);\n  const getHighscores = async () => {\n    try {\n      const res = await fetch(\"/api/highscores\");\n      const data = await res.json();\n      setHighscores(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const setHighscore = async newScore => {\n    try {\n      getHighscores();\n      highscores.pop();\n      highscores.push(newScore);\n      highscores.sort((a, b) => a.score > b.score ? 1 : -1);\n      console.log(highscores);\n\n      //todo: send post request with updated highscores\n      const res = await fetch(\"./api/highscores\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(highscores)\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    getHighscores();\n  }, []);\n  return {\n    highscores,\n    setHighscore\n  };\n};\n_s(useHighscores, \"mcz/aJeCjymKT7Kww7KEQ/3ZQfI=\");\nexport default useHighscores;","map":{"version":3,"names":["useEffect","useState","useHighscores","_s","highscores","setHighscores","getHighscores","res","fetch","data","json","err","console","log","setHighscore","newScore","pop","push","sort","a","b","score","method","headers","body","JSON","stringify"],"sources":["/Users/cd/Documents/Projects/set-game2/client/src/hooks/useHighscores.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { ScoreType } from \"../types/ScoreType\";\n\nconst useHighscores = () => {\n  const [highscores, setHighscores] = useState<ScoreType[]>([]);\n\n  const getHighscores = async () => {\n    try {\n      const res = await fetch(\"/api/highscores\");\n      const data = await res.json();\n      setHighscores(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const setHighscore = async (newScore: ScoreType) => {\n    try {\n      getHighscores();\n      highscores.pop();\n      highscores.push(newScore);\n\n      highscores.sort((a, b) => (a.score > b.score ? 1 : -1));\n\n      console.log(highscores);\n\n      //todo: send post request with updated highscores\n      const res = await fetch(\"./api/highscores\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(highscores),\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getHighscores();\n  }, []);\n\n  return { highscores, setHighscore };\n};\n\nexport default useHighscores;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAG3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAc,EAAE,CAAC;EAE7D,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC;MAC1C,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7BL,aAAa,CAACI,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOC,QAAmB,IAAK;IAClD,IAAI;MACFT,aAAa,CAAC,CAAC;MACfF,UAAU,CAACY,GAAG,CAAC,CAAC;MAChBZ,UAAU,CAACa,IAAI,CAACF,QAAQ,CAAC;MAEzBX,UAAU,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;MAEvDT,OAAO,CAACC,GAAG,CAACT,UAAU,CAAC;;MAEvB;MACA,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;QAC1Cc,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACtB,UAAU;MACjC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdM,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEF,UAAU;IAAEU;EAAa,CAAC;AACrC,CAAC;AAACX,EAAA,CAzCID,aAAa;AA2CnB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}