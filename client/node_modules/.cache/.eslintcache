[{"/Users/cd/Documents/Projects/set-game2/client/src/index.js":"1","/Users/cd/Documents/Projects/set-game2/client/src/App.js":"2","/Users/cd/Documents/Projects/set-game2/client/src/components/Gameboard.tsx":"3","/Users/cd/Documents/Projects/set-game2/client/src/components/Modal.tsx":"4","/Users/cd/Documents/Projects/set-game2/client/src/components/Scoreboard.tsx":"5","/Users/cd/Documents/Projects/set-game2/client/src/components/Rules.tsx":"6","/Users/cd/Documents/Projects/set-game2/client/src/context/GameLogic.tsx":"7","/Users/cd/Documents/Projects/set-game2/client/src/components/Card.tsx":"8","/Users/cd/Documents/Projects/set-game2/client/src/components/Landing.tsx":"9","/Users/cd/Documents/Projects/set-game2/client/src/utils/utils.ts":"10","/Users/cd/Documents/Projects/set-game2/client/src/cards.ts":"11","/Users/cd/Documents/Projects/set-game2/client/src/hooks/useHighscores.tsx":"12"},{"size":254,"mtime":1686936140756,"results":"13","hashOfConfig":"14"},{"size":1658,"mtime":1695844174334,"results":"15","hashOfConfig":"14"},{"size":1589,"mtime":1692810147334,"results":"16","hashOfConfig":"14"},{"size":569,"mtime":1692999170694,"results":"17","hashOfConfig":"14"},{"size":1172,"mtime":1696350900631,"results":"18","hashOfConfig":"14"},{"size":1980,"mtime":1692997948793,"results":"19","hashOfConfig":"14"},{"size":2435,"mtime":1692998635644,"results":"20","hashOfConfig":"14"},{"size":690,"mtime":1692810147333,"results":"21","hashOfConfig":"14"},{"size":1823,"mtime":1693000193358,"results":"22","hashOfConfig":"14"},{"size":3141,"mtime":1692982276443,"results":"23","hashOfConfig":"14"},{"size":10929,"mtime":1689876451534,"results":"24","hashOfConfig":"14"},{"size":1276,"mtime":1696350881756,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"111llfo",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/cd/Documents/Projects/set-game2/client/src/index.js",[],[],[],"/Users/cd/Documents/Projects/set-game2/client/src/App.js",[],[],"/Users/cd/Documents/Projects/set-game2/client/src/components/Gameboard.tsx",[],[],[],"/Users/cd/Documents/Projects/set-game2/client/src/components/Modal.tsx",[],[],"/Users/cd/Documents/Projects/set-game2/client/src/components/Scoreboard.tsx",[],[],"/Users/cd/Documents/Projects/set-game2/client/src/components/Rules.tsx",[],[],"/Users/cd/Documents/Projects/set-game2/client/src/context/GameLogic.tsx",["65"],[],"import { createContext, useContext, useState, useEffect } from \"react\";\nimport { initDeck, checkSet, updateDeck } from \"../utils/utils\";\nimport { CardType } from \"../types/CardType\";\ninterface IGameContext {\n  deck: CardType[];\n  setDeck: (deck: CardType[]) => void;\n  score: number;\n  setScore: (score: number) => void;\n}\n\nconst initialContext = {\n  deck: [],\n  setDeck: () => {},\n  score: 0,\n  setScore: () => {},\n};\n\nconst GameContext = createContext<IGameContext>(initialContext);\n\n// Hook that returns the Context value\nexport const useGameDetails = () => {\n  const contextValue = useContext(GameContext);\n\n  if (!contextValue) {\n    throw new Error(\"useGameDetails must be called within GameContextProvider\");\n  }\n  return contextValue;\n};\n\n// Context provider that returns the context that wraps the children to give them access to the state\nexport const GameContextProvider = ({ children }: any) => {\n  // ------- State -------\n  const [deck, setDeck] = useState<CardType[]>(initDeck());\n  const [score, setScore] = useState<number>(0);\n\n  const value = {\n    deck,\n    setDeck,\n    score,\n    setScore,\n  };\n\n  // ------- Functions -------\n  const selectedCardsAreASet = (selectedCards: CardType[]) => {\n    selectedCards.forEach((card) => {\n      card.set = true;\n    });\n    setScore(score + 1);\n    setTimeout(() => {\n      const newDeck = updateDeck(deck);\n      setDeck(newDeck);\n    }, 1000);\n  };\n\n  const selectedCardsNotASet = (selectedCards: CardType[]) => {\n    setScore(score - 1);\n\n    selectedCards.forEach((card) => {\n      card.set = false;\n    });\n    // Reset selected cards\n    setTimeout(() => {\n      let newDeck = [...deck];\n      deck.forEach((card) => {\n        card.selected = false;\n        card.set = null;\n      });\n      setDeck(newDeck);\n    }, 1000);\n  };\n\n  // ------- Effects -------\n  useEffect(() => {\n    const selectedCards = deck.filter((card) => card.selected === true);\n    if (selectedCards.length === 3) {\n      if (checkSet(selectedCards)) {\n        // Modify selectedCards property set to true\n        selectedCardsAreASet(selectedCards);\n      } else {\n        // Modify selectedCards property set to false\n        selectedCardsNotASet(selectedCards);\n      }\n    }\n  }, [deck]);\n\n  //if current score is higer than the lowest high score, add it to the high scores\n  useEffect(() => {}, [score]);\n\n  return <GameContext.Provider value={value}>{children}</GameContext.Provider>;\n};\n","/Users/cd/Documents/Projects/set-game2/client/src/components/Card.tsx",[],[],"/Users/cd/Documents/Projects/set-game2/client/src/components/Landing.tsx",[],[],"/Users/cd/Documents/Projects/set-game2/client/src/utils/utils.ts",[],[],"/Users/cd/Documents/Projects/set-game2/client/src/cards.ts",[],[],"/Users/cd/Documents/Projects/set-game2/client/src/hooks/useHighscores.tsx",[],[],{"ruleId":"66","severity":1,"message":"67","line":84,"column":6,"nodeType":"68","endLine":84,"endColumn":12,"suggestions":"69"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'selectedCardsAreASet' and 'selectedCardsNotASet'. Either include them or remove the dependency array.","ArrayExpression",["70"],{"desc":"71","fix":"72"},"Update the dependencies array to be: [deck, selectedCardsAreASet, selectedCardsNotASet]",{"range":"73","text":"74"},[2225,2231],"[deck, selectedCardsAreASet, selectedCardsNotASet]"]